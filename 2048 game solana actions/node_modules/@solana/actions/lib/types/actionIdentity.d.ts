import { ConfirmedSignatureInfo, Connection, Keypair, PublicKey, Signer, TransactionInstruction } from "@solana/web3.js";
import type { Reference } from "./types.js";
export declare function createActionIdentifierMemo(identity: Signer, reference: Reference): string;
/**
 * Thrown when the Action POST response cannot be created.
 */
export declare class ActionIdentifierError extends Error {
    name: string;
}
export declare function validateActionIdentifierMemo(identity: PublicKey, memos: string | string[] | null): false | {
    verified: true;
    reference: string;
};
export declare function verifySignatureInfoForIdentity(connection: Connection, identity: Signer, sigInfo: ConfirmedSignatureInfo): Promise<boolean>;
/**
 *
 */
export declare function createActionIdentifierInstruction(identity: Signer, reference?: PublicKey): {
    memo: string;
    instruction: TransactionInstruction;
    reference: Reference;
};
export declare function getActionIdentityFromEnv(envKey?: string): Keypair;
//# sourceMappingURL=actionIdentity.d.ts.map